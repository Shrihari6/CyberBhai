const grid = document.getElementById('highlights-grid');
const statusEl = document.getElementById('status');
const chatlog = document.getElementById('chatlog');
const chatForm = document.getElementById('chat-form');
const chatInput = document.getElementById('chat-input');
document.getElementById('year').textContent = new Date().getFullYear();

function toggleMenu() {
  document.getElementById("nav-links").classList.toggle("active");
}

async function loadHighlights() {
  try {
    const res = await fetch('/data/highlights.json', { cache: 'no-store' });
    const items = await res.json();
    grid.innerHTML = items.map(item => `
      <article class="glass rounded-xl p-4 border border-white/10">
        <div class="flex items-center justify-between">
          <div class="flex items-center gap-2">
            <div class="h-8 w-8 rounded-lg bg-white/10 flex items-center justify-center">${item.icon}</div>
            <h4 class="font-semibold">${item.platform}</h4>
          </div>
          <span class="text-xs text-slate-400">${item.updated}</span>
        </div>
        <p class="mt-2 text-sm text-slate-300">${item.summary}</p>
        <ul class="mt-2 text-sm text-slate-300 list-disc list-inside space-y-1">
          ${item.tips.map(t => `<li>${t}</li>`).join('')}
        </ul>
        ${item.link ? `<a class="inline-block mt-3 text-blue-300 hover:text-blue-200 underline text-sm" target="_blank" href="${item.link}">Official Safety Page →</a>` : ''}
      </article>
    `).join('');
  } catch (e) {
    grid.innerHTML = `<div class="text-slate-400">Failed to load highlights.</div>`;
  }
}

function addMsg(role, text) {
  const wrap = document.createElement('div');
  wrap.className = role === 'user' ? 'flex justify-end' : 'flex justify-start';
  wrap.innerHTML = `
    <div class="${role === 'user' ? 'bg-blue-600' : 'bg-white/10'} rounded-lg px-3 py-2 max-w-[80%] whitespace-pre-wrap">
      ${text.replace(/</g,'&lt;')}
    </div>`;
  chatlog.appendChild(wrap);
  chatlog.scrollTop = chatlog.scrollHeight;
}

chatForm.addEventListener('submit', async (e) => {
  e.preventDefault();
  const q = chatInput.value.trim();
  if (!q) return;
  addMsg('user', q);
  chatInput.value = '';
  statusEl.textContent = 'Thinking…';
  try {
    const res = await fetch('/api/chat', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ message: q })
    });
    const data = await res.json();
    if (data.error) throw new Error(data.error);
    addMsg('assistant', data.reply || '(no reply)');
  } catch (err) {
    addMsg('assistant', 'Error: ' + err.message);
  } finally {
    statusEl.textContent = 'Ready';
  }
});


async function runNmap() {
            const ip = document.getElementById("ipInput").value;
            if (!ip) {
                alert("Enter an IP address!");
                return;
            }
            document.getElementById("resultBox").innerHTML = "Scanning...";
 try{
            const response = await fetch(`/scan/${ip}`);
            const data = await response.json();

            document.getElementById("resultBox").innerHTML = `<h2>Scan Results for ${ip}</h2> <pre>${data.result}</pre>`;
        


         // Save results for printing later
        window.latestScan = {
            ip,
            result: data.result,
            date: new Date().toLocaleString()
        };

    } catch (err) {
        console.error("Error fetching scan:", err);
        document.getElementById("resultBox").innerHTML = `<p style="color:red;">Scan failed</p>`;
    }
}

function printReport() {
    if (!window.latestScan) {
        alert("Please run a scan first!");
        return;
    }

    const { ip, result, date } = window.latestScan;

    const printWindow = window.open('', '_blank');
    printWindow.document.write(`
        <!DOCTYPE html>
        <html>
        <head>
            <title>Nmap Scan Report</title>
            <style>
                body { font-family: Arial, sans-serif; padding: 20px; }
                h2 { color: #1e40af; }
                .report { border: 2px solid #333; border-radius: 10px; padding: 20px; }
                .meta { margin-bottom: 20px; }
                pre { background: #f4f4f4; padding: 10px; border-radius: 6px; overflow-x: auto; }
            </style>
        </head>
        <body>
            <div class="report">
                <h2>CyberBhai Nmap Report</h2>
                <div class="meta">
                    <p><b>Target IP:</b> ${ip}</p>
                    <p><b>Date:</b> ${date}</p>
                </div>
                <h3>Scan Results:</h3>
                <pre>${result}</pre>
                <p style="text-align:center; margin-top:20px;">Generated by CyberBhai Scanner</p>
            </div>
        </body>
        </html>
    `);
    printWindow.document.close();
    printWindow.print();
}


        /*
        document.getElementById("download").addEventListener("click", () => {
            const element = document.getElementById("report_pdf");
            const opt = {
                margin:       0.5,
                filename:     'cyberbhai_report.pdf',
                image:        { type: 'jpeg', quality: 0.98 },
                html2canvas:  { scale: 2 },
                jsPDF:        { unit: 'in', format: 'a4', orientation: 'portrait' }
            };

            html2pdf().set(opt).from(element).save();
        });
        */

loadHighlights();
